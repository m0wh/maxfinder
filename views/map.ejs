<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.2/dist/leaflet.css" integrity="sha256-sA+zWATbFveLLNqWO2gtiw3HL/lh1giY/Inf1BJ0z14=" crossorigin=""/>
<style>
  #map {
    height: calc(100vh - 40px);
  }
</style>

<!---->

<div id="map"></div>

<!---->

<script src="https://unpkg.com/leaflet@1.9.2/dist/leaflet.js" integrity="sha256-o9N1jGDZrf5tS+Ft4gbIK7mYMipq9lqpVJ91xHSyKhg=" crossorigin=""></script>
<script>
  const locals = {
    title: '<%= title %>',
    trains: JSON.parse(`<%- JSON.stringify(trains) %>`).map(t => ({
      ...t,
      departure: new Date(t.departure),
      arrival: new Date(t.arrival)
    }))
  }

  
  const direction = window.location.pathname.split('/')[2] === 'from' ? 'to' : 'from'

  const map = L.map('map').setView([46.8437381,3.1047776], 6)

  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: `${locals.title}`
  }).addTo(map);

  const placesToShow = [...new Set(locals.trains.map(t => t[direction]?.city_id))]
  const markers = placesToShow.map(placeId => {
    const routes = locals.trains.filter(t => t[direction]?.city_id === placeId)
    const place = routes[0][direction]
    const m = L.marker([place.location.lat, place.location.lng]).addTo(map)
    const str = routes.map(r => `${r.departure.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})} - ${r.arrival.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})} (<span class="mono">${r.train_no}</span>)`).join('<br>')
    m.bindPopup(`<b>${routes[0].from.city} - ${routes[0].to.city}</b><br>${str}`)
    return m
  })
</script>